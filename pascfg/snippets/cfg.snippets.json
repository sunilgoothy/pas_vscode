{
	// Place your snippets for cfg here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"DebugAlarmStd": {
		"prefix": "alarm",
		"body": [
		  "s_STDm_AlarmMessage = \"${1:AlarmMessage}\" ;",
		  "m_STDm_SendAlarm ;${0}"
		],
		"description": "DebugAlarmStd"
	  },
	"DebugAlarmConcat": {
		"prefix": "alarm",
		"body": [
		  "String_Dir->Concatenate( s_STDm_AlarmMessage, \" ${1:AlarmMessage} \", ${2:VarOrString} ) ;",
		  "m_STDm_SendAlarm ;${0}"
		],
		"description": "DebugAlarmConcat"
	  },
	  "DebugAlarmEvtStd": {
		"prefix": "almevt",
		"body": [
		  "s_STDm_AlarmMessage = \"${1:AlarmMessage}\" ;",
		  "s_STDm_AlarmKind = s_STDm_cAlarmEVT ;",
		  "m_STDm_SendAlarm ;${0}"
		],
		"description": "DebugAlarmEvtStd"
	  },
	  "DebugAlarmErrStd": {
		"prefix": "almerr",
		"body": [
		  "s_STDm_AlarmMessage = \"${1:AlarmMessage}\" ;",
		  "s_STDm_AlarmKind = s_STDm_cAlarmERR ;",
		  "m_STDm_SendAlarm ;${0}"
		],
		"description": "DebugAlarmErrStd"
	  },
	  "DebugAlarmEvtConcat": {
		"prefix": "almevt",
		"body": [
		  "String_Dir->Concatenate( s_STDm_AlarmMessage, \" ${1:AlarmMessage} \", ${2:VarOrString} ) ;",
		  "s_STDm_AlarmKind = s_STDm_cAlarmEVT ;",
		  "m_STDm_SendAlarm ;${0}"
		],
		"description": "DebugAlarmEvtConcat"
	  },
	  "DebugAlarmErrConcat": {
		"prefix": "almerr",
		"body": [
			"String_Dir->Concatenate( s_STDm_AlarmMessage, \" ${1:AlarmMessage} \", ${2:VarOrString} ) ;",
		  "s_STDm_AlarmKind = s_STDm_cAlarmERR ;",
		  "m_STDm_SendAlarm ;${0}"
		],
		"description": "DebugAlDebugAlarmErrConcatarmErrStd"
	  },
	  "SetAlmToEVT": {
		"prefix": "almevt",
		"body": [
		  "s_STDm_AlarmKind = s_STDm_cAlarmEVT ;$0"
		],
		"description": "SetAlmToEVT"
	  },
	  "SetAlmToERR": {
		"prefix": "almerr",
		"body": [
		  "s_STDm_AlarmKind = s_STDm_cAlarmERR ;$0"
		],
		"description": "SetAlmToERR"
	  }

}